package com.vacacionapp.app.controllers;

import java.text.SimpleDateFormat;
//import java.util.Calendar;
import java.util.Date;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.vacacionapp.app.models.entity.Empleado;
import com.vacacionapp.app.models.entity.Solicitud;
import com.vacacionapp.app.models.service.IEmpleadoService;


@Controller
@RequestMapping("/solicitud")
@SessionAttributes("solicitud")
public class SolicitudController {
	
	@Autowired
	private IEmpleadoService empleadoService;

	
	@GetMapping("/form/{empleadoCod}")
	public String crear(@PathVariable(value="empleadoCod") int empleadoCod, Map<String, Object> model,  RedirectAttributes flash) {
		
		//Formato de la fecha
		//SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
		SimpleDateFormat formatterAnio = new SimpleDateFormat("yyyy");
		//SimpleDateFormat formatterMes = new SimpleDateFormat("MM");
		//SimpleDateFormat formatterDia = new SimpleDateFormat("dd");
		//int anioInicio = 0;
		int anioActual = 0;
		Date fechaHoy = new Date();
		//Calendar calendario = Calendar.getInstance();
		
		Empleado empleado = empleadoService.findById(empleadoCod);

		if(empleado == null) {
			flash.addAttribute("error", "El empleado no existe ne la Base de Datos");
			return "redirect:/listar";
		}
		Solicitud solicitud = new Solicitud();
		solicitud.setEmpleado(empleado);
				
		//anioInicio = Integer.parseInt(formatterAnio.format(empleado.getFechIngreso()));
		anioActual = Integer.parseInt(formatterAnio.format(fechaHoy));		

		if(empleadoService.contSolByEmplAndAnio(solicitud.getCodigoEmpSolicita(),anioActual) == 0){
			solicitud.setFechIni(empleado.getFechIngreso());
			solicitud.setDiasTotalPeriodo(15);
		}else {
			
			solicitud.setFechIni(empleadoService.maxFechIniSolByEmpl(solicitud.getCodigoEmpSolicita()));
			solicitud.setFechFin(empleadoService.maxFechFinSolByEmpl(solicitud.getCodigoEmpSolicita()));
			solicitud.setDiasTotalPeriodo(0);
			
			solicitud.getEmpleado().getSolicitudes().size();
			System.out.println("Antonio "+solicitud.getEmpleado().getSolicitudes().size());
		}
		
		//System.out.println("Antonio count "+empleadoService.contSolByEmplAndAnio(solicitud.getCodigoEmpSolicita(),2018));
		
		model.put("solicitud", solicitud);
		model.put("titulo", "Crear Solicitud");
		
		return "solicitud/form";
	}	
	
	@PostMapping("/form")
	public String guardar(Solicitud solicitud, BindingResult result, Model model, RedirectAttributes flash, SessionStatus status) {
		
		empleadoService.saveSolicitud(solicitud);
		
		status.setComplete();
		
		flash.addFlashAttribute("success","Solicitud creada con exito..!");
		
		return "redirect:/ver/"+solicitud.getEmpleado().getCodigo();
		
	}
}
